<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAH/2Q==
</value>
  </data>
</root>